{% extends 'base.html.twig' %}

{% block title %}Accueil - Bolonews{% endblock %}



{% block body %}
    {# Formulaire GET pour rechercher un article par mot-cl√© #}
<div class="search-bar-container">
  <form method="get" action="{{ path('app_home') }}" class="search-bar">
    <input type="text" name="q" placeholder="Rechercher" value="{{ app.request.get('q') }}" />
    <button type="submit" class="search-icon" style="border:none; background:transparent; cursor:pointer;">
      üîç
    </button>
  </form>
</div>



    <h1 style="margin-bottom: 30px;">Les derniers articles</h1>

    <div class="articles">
    {# On parcourt tous les articles pass√©s depuis le contr√¥leur, Boucle sur la collection d‚Äôarticles fournie par le contr√¥leur #}
{% for article in articles %}
    <div class="article-card">

        {# Image de l‚Äôarticle #}
        {% if article.image %}
        {# Affiche l‚Äôimage si elle existe, avec un path relatif vers le dossier uploads/images #}
            <img src="{{ asset('uploads/images/' ~ article.image) }}" alt="{{ article.titre }}" class="article-img">
        {% endif %}

        <h2 style="margin-bottom:10px;">
            <a href="{{ path('article_show', { id: article.id }) }}"
               style="text-decoration: none; color: #333;">
                {{ article.titre }}
            </a>
        </h2>
        {# Affiche la cat√©gorie, ou ¬´ Non cat√©goris√© ¬ª par d√©faut #}
        <p><strong>Cat√©gorie :</strong> {{ article.categorie ?? 'Non cat√©goris√©' }}</p>
        {# Affiche le pseudo de l‚Äôauteur si il existe, sinon 'Inconnu' #}
        <p><strong>Auteur :</strong> {{ article.auteur ? article.auteur.pseudo : 'Inconnu' }}</p>
        {# Affiche la date de cr√©ation format√©e (jj/mm/aaaa) ou rien si absente #}
        <p><strong>Date :</strong> {{ article.dateCreation ? article.dateCreation|date('d/m/Y') : '' }}</p>

        <p style="margin: 15px 0;">
        {# Affiche le r√©sum√© (chapeau) limit√© √† 200 caract√®res avec points de suspension #}
            {{ article.chapeau|length > 200 ? article.chapeau|slice(0, 200) ~ '‚Ä¶' : article.chapeau }}
        </p>

        <p>
            {% if app.user %}
                <form method="post" action="{{ path('article_like', { id: article.id }) }}" style="display: inline;">
                    <button type="submit"
                            class="like-btn{% if article.likedBy.contains(app.user) %} liked{% endif %}"
                            aria-label="Liker {{ article.titre }}">
                        <span class="like-icon">
                            {{ ux_icon('weui:like-outlined', { class: 'coeur-xxl' }) }}
                        </span>
                        <span class="like-count">{{ article.likedBy|length }}</span>
                        <span class="comment-icon" style="margin-left:18px;">
                            {{ ux_icon('iconamoon:comment', { class: 'comment-bulle' }) }}
                            <span class="comment-count">{{ article.commentaires|length }}</span>
                        </span>
                    </button>
                </form>
            {% else %}
            {# Affiche le bouton Like (avec comptage) si connect√©, sinon nombre total de likes #}
                <span class="like-count">{{ article.likedBy|length }} ‚ù§Ô∏è</span>
            {% endif %}
        </p>

        <a href="{{ path('article_show', { id: article.id }) }}">‚û°Ô∏è Lire l‚Äôarticle</a>
{% if app.user %}
    <form method="post" action="{{ path('article_toggle_publish', { id: article.id }) }}">
        {# 
      Champ cach√© contenant un token CSRF g√©n√©r√© pour s√©curiser la requ√™te contre les attaques 
      Cross-Site Request Forgery. Ce token est sp√©cifique √† l'article selon son ID.
    #}
        <input type="hidden" name="_token" value="{{ csrf_token('toggle_publish_' ~ article.id) }}">
        {# 
          Le texte du bouton est dynamique :
          - Si la cat√©gorie de l'article est 'brouillon', on propose de ¬´ Publier ¬ª
          - Sinon, on propose de ¬´ D√©publier ¬ª (repasse en brouillon)
        #}
        <button>
            {{ article.categorie == 'brouillon' ? 'Publier' : 'D√©publier' }}
        </button>
    </form>
{% endif %}

        {# Si utilisateur connect√© est l‚Äôauteur ou admin, affiche bouton supprimer avec protection CSRF #}
        {% if app.user and (app.user == article.auteur or 'ROLE_ADMIN' in app.user.roles) %}
        <form method="post"
            action="{{ path('article_delete', { id: article.id }) }}"
            onsubmit="return confirm('Supprimer ?');"
            style="margin-top: 10px;">
            <input type="hidden" name="_token" value="{{ csrf_token('delete_article_' ~ article.id) }}">
            <button class="btn btn-danger btn-sm">üóë Supprimer</button>
        </form>
{% endif %}
    </div> {#  Fermeture d√©finitive du bloc article-card ici #}
{% else %}
    <p>Aucun article publi√©.</p>
{% endfor %}

    </div>
{% endblock %}
